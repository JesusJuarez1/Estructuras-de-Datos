package pruebas;

import entradasalida.SalidaTerminal;
import estructuraslineales.ArregloDatos;
import estructuraslineales.ListaEncadenada;
import estructurasnolineales.Tabla2D;
import estructurasnolineales.TipoTabla;

public class PruebaListaEncadenada {
    public static void main(String[] args) {
        ListaEncadenada lista1 = new ListaEncadenada();
        lista1.agregar("A");
        lista1.agregar("B");
        lista1.agregar("C");
        lista1.agregar("D");
        lista1.imprimir();
        SalidaTerminal.consola("\nImprimir en orden inverso:\n");
        lista1.imprimirOrdenInverso();
        SalidaTerminal.consola("\nBusca un elemento: "+lista1.buscar("C")+"\n");
        SalidaTerminal.consola("Lista a arreglo: \n");
        ArregloDatos arr = lista1.aArreglo();
        arr.imprimir();
        //Se agregan mas elementos
        lista1.agregar("E");
        lista1.agregar("F");
        lista1.agregar("G");
        SalidaTerminal.consola("Lista a arreglo sin repetidos por el arreglo\n");
        lista1.aArreglo(arr).imprimir();
        SalidaTerminal.consola("Lista a matriz2D:\n");
        Tabla2D m2d = lista1.aTabla2D(3,3);
        m2d.imprimirR();
        SalidaTerminal.consola("Agregar los datos de una lista: \n");
        lista1.agregarLista(arr);
        lista1.imprimir();
        SalidaTerminal.consola("\nCopia de la lista: \n");
        ListaEncadenada lista2 = (ListaEncadenada) lista1.clonar();
        lista2.imprimir();
        SalidaTerminal.consola("\nAgregar matriz a lista: "+lista2.agregarTabla2D(m2d, TipoTabla.COLUMNA)+"\n");
        lista2.imprimir();
        SalidaTerminal.consola("\nVaciar la lista: \n");
        lista1.vaciar();
        lista1.imprimir();
        SalidaTerminal.consola("\nRellenar lista: \n");
        lista1.rellenar("X",5);
        lista1.imprimir();
        SalidaTerminal.consola("\nContar coincidencias: "+lista1.contar("X")+"\n");
        SalidaTerminal.consola("invertir:\n");
        lista2.invertir();
        lista2.imprimir();
        SalidaTerminal.consola("\nCambiar: "+lista1.cambiar("X","K",3)+"\n");
        lista1.imprimir();
        SalidaTerminal.consola("\nCambiar por indice: "+lista1.cambiar(3,"Ñ")+"\n");
        lista1.imprimir();
        SalidaTerminal.consola("\nObtener por indice: "+lista1.obtener(3)+"\n");
        SalidaTerminal.consola("Comparar listas: "+lista1.esIgual(lista1)+"\n");
        SalidaTerminal.consola("Redimensionar: "+lista2.redimensionar(4)+"\n");
        lista2.imprimir();
        SalidaTerminal.consola("\nEliminar por indice: "+lista2.eliminar(2)+"\n");
        lista2.imprimir();
        SalidaTerminal.consola("\nBuscar valores: \n");
        ArregloDatos arr2 = lista1.buscarValores("K");
        arr2.imprimir();
        ListaEncadenada lista3 = new ListaEncadenada();
        lista3.agregar("J");
        lista3.agregar("E");
        lista3.agregar("A");
        lista3.agregar("S");
        lista3.agregar("F");
        lista3.agregar("G");
        ArregloDatos arr3 = new ArregloDatos(3);
        arr3.agregar("F");
        arr3.agregar("A");
        arr3.agregar("E");
        lista3.imprimir();
        SalidaTerminal.consola("\nEliminar lista: "+lista3.eliminarLista(arr3)+"\n");
        lista3.imprimir();
        lista3.agregar("E");
        lista3.agregar("A");
        lista3.agregar("F");
        SalidaTerminal.consola("\nSub lista: \n");
        ListaEncadenada lista4 = (ListaEncadenada) lista3.subLista(1,3);
        lista4.imprimir();
        SalidaTerminal.consola("\nEs sublista?: "+lista3.esSublista(lista4)+"\n");
        ArregloDatos arr4 = new ArregloDatos(3);
        arr4.agregar("X");
        arr4.agregar("Y");
        arr4.agregar("Z");
        SalidaTerminal.consola("Cambiar lista: "+lista3.cambiarLista(arr3,arr4)+"\n");
        lista3.imprimir();
        SalidaTerminal.consola("\nRetener lista: "+lista3.retenerLista(arr4)+"\n");
        lista3.imprimir();
        SalidaTerminal.consola("\nInsertar: "+lista3.insertar(1,"K")+"\n");
        lista3.imprimir();
        SalidaTerminal.consola("\nCopiar lista: "+lista3.copiarLista(arr3)+"\n");
        lista3.imprimir();
    }
}
